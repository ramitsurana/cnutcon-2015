White Papers to Production
CNUT China 2015

Kelsey Hightower
CoreOS
kelsey.hightower@coreos.com
@kelseyhightower

* White Papers

In the past advanced infrastructure tools where only described in white papers.

- Chubby: The Chubby lock service for loosely-coupled distributed systems.
- Borg: Large-scale cluster management at Google with Borg.

White papers now serve as design docs for opensource projects.

- etcd: Distributed k/v store and lock service (Chubby)
- Kubernetes: Container management platform (Borg)

* White Papers

Most systems described in white papers cannot be released to the public.

- Large existing code bases which make many assumptions
- Won't work well in every environment
- Legal challenges

* Can we leverage these systems in our own environments?

* Chubby

The Chubby lock service for loosely-coupled distributed systems.

- Leader election
- Support shared configuration across clusters (/global)
- Exports a file system interface (/database/config)
- Source of truth for cluster information (configuration)
- Asynchronous consensus is solved by the Paxos protocol

Clients

- KeepAlives are used to transmit events and cache invalidations

* Chubby

.image images/chubby-overview.png _ 700

* etcd aims to build a better Chubby through collaboration.

* etcd

Distributed k/v store and lock service.

- Leader election
- Exports a file system interface (/database/config)
- Source of truth for cluster information (configuration)
- Asynchronous consensus is solved by the Raft protocol

Clients

- HTTP long poll to watch for events
- Proxies used to scale clients

* etcd

etcd v3 API will offer many improvements

- Move away from file system interface (arbitrary keys with range query)
- Add support for client sessions (Keepalives for leased keys)
- Clients will register a watcher for a set of keys or paths (grpc stream)
- grpc (protobufs + rpc) client interface

* etcd

.image images/etcd.png

* etcd demo

* Borg

Large-scale cluster management at Google

- Declarative job specification language
- Name service integration
- Real-time job monitoring
- Admission control (quota)
- Overcommit 

Allocs

- Reserved set of resources on a machine in which one or more tasks can be run.

Heterogenous workloads

- long-running services and batch jobs

* Borg

.image images/borg.png _ 600

* Kubernetes aims to build a better Borg through collaboration.

* Kubernetes

Container management, scheduling, and service discovery.

- Pods and Labels, not Jobs
- One IP per pod and service
- Naming and load balancing using a service abstraction

Pods replace Allocs

- Pods provide a resource envelope for one or more containers
- Pods allow helper containers to share a machine and resources

Run Spark and/or Hadoop on Kubernetes for batch job support

* Containers

Unix processes not lightweight Virtual Machines

- application + dependencies = image
- Runtime environment (cgroups, namespaces, env vars)

.image images/container.png

* Pod

Represents a logical application.

- One or more containers
- Shared namespaces

.image images/pod.png

* Scheduler

Schedules pods to run on nodes.

- Global scheduler for long running jobs
- Best fit chosen based on pod requirements
- Pluggable

.image images/kubernetes-scheduler.png

* Replication Controller

Manages a replicated set of pods.

- Creates pods from a template
- Ensures desired number of pods are running
- Online resizing 

.image images/kubernetes-rc.png

* Replication Controller

Manages a replicated set of pods.

- Creates pods from a template
- Ensures desired number of pods are running
- Self-healing 

.image images/kubernetes-rc-reschedule.png

* Service

Service discovery for pods.

- Proxy runs on each node
- Virutal IP per service (avoid port collisions)
- Basic round-robin algorithm
- Dynamic backends based on label queries 

* Kubernetes demo
